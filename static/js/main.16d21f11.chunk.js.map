{"version":3,"sources":["components/SongList.js","actions/index.js","components/SongDetail.js","components/App.js","reducers/index.js","index.js"],"names":["SongList","this","props","songs","map","song","className","key","title","onClick","selectSong","renderList","Component","connect","state","type","payload","selectedSong","duration","App","combineReducers","action","ReactDom","render","store","createStore","reducers","document","querySelector"],"mappings":"2NAIMA,E,2KACU,IAAD,OACX,OAAOC,KAAKC,MAAMC,MAAMC,KAAI,SAACC,GAC3B,OACE,yBAAKC,UAAU,OAAOC,IAAKF,EAAKG,OAC9B,yBAAKF,UAAU,yBACb,4BACEA,UAAU,oBACVG,QAAS,kBAAM,EAAKP,MAAMQ,WAAWL,KAFvC,WAOF,yBAAKC,UAAU,WAAWD,EAAKG,a,+BAMrC,OAAO,yBAAKF,UAAU,mBAAmBL,KAAKU,kB,GAnB3BC,aA2BRC,eAJS,SAACC,GACvB,MAAO,CAAEX,MAAOW,EAAMX,SAGgB,CAAEO,WC9BhB,SAACL,GAEzB,MAAO,CACLU,KAAM,gBACNC,QAASX,KD0BEQ,CAAyCb,GERzCa,eALS,SAACC,GACvB,MAAO,CAAET,KAAMS,EAAMG,gBAIRJ,EApBI,SAAC,GAAc,IAAZR,EAAW,EAAXA,KACpB,OAAKA,EAGH,6BACE,6CACA,qCACUA,EAAKG,MACb,6BAFF,aAGaH,EAAKa,WARJ,iDCeLC,EAfH,WACV,OACE,yBAAKb,UAAU,qBACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,qBACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,qBACb,kBAAC,EAAD,UCQKc,cAAgB,CAC7BjB,MAnBmB,WACnB,MAAO,CACL,CAAEK,MAAO,iBAAkBU,SAAU,QACrC,CAAEV,MAAO,sBAAuBU,SAAU,QAC1C,CAAEV,MAAO,YAAaU,SAAU,QAChC,CAAEV,MAAO,cAAeU,SAAU,QAClC,CAAEV,MAAO,eAAgBU,SAAU,UAcrCD,aAV0B,WAAkC,IAAjCA,EAAgC,uDAAjB,KAAMI,EAAW,uCAC3D,MAAoB,kBAAhBA,EAAON,KACFM,EAAOL,QAGTC,KCTTK,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAOC,YAAYC,IAC3B,kBAAC,EAAD,OAEFC,SAASC,cAAc,Y","file":"static/js/main.16d21f11.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectSong } from \"../actions\";\r\n\r\nclass SongList extends Component {\r\n  renderList() {\r\n    return this.props.songs.map((song) => {\r\n      return (\r\n        <div className=\"item\" key={song.title}>\r\n          <div className=\"right floated content\">\r\n            <button\r\n              className=\"ui button primary\"\r\n              onClick={() => this.props.selectSong(song)}\r\n            >\r\n              Select\r\n            </button>\r\n          </div>\r\n          <div className=\"content\">{song.title}</div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n  render() {\r\n    return <div className=\"ui divided list\">{this.renderList()}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { songs: state.songs };\r\n};\r\n\r\nexport default connect(mapStateToProps, { selectSong })(SongList);\r\n","// Action creator\r\nexport const selectSong = (song) => {\r\n  // Return an action\r\n  return {\r\n    type: \"SONG_SELECTED\",\r\n    payload: song,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst SongDetail = ({ song }) => {\r\n  if (!song) return <div>Select a song</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h3>Details for: </h3>\r\n      <p>\r\n        Title: {song.title}\r\n        <br />\r\n        Duration: {song.duration}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { song: state.selectedSong };\r\n};\r\n\r\n// export default SongDetail;\r\nexport default connect(mapStateToProps)(SongDetail);\r\n","import React from \"react\";\r\nimport SongList from \"./SongList\";\r\nimport SongDetail from \"./SongDetail\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"ui container grid\">\r\n      <div className=\"ui row\">\r\n        <div className=\"column eight wide\">\r\n          <SongList />\r\n        </div>\r\n        <div className=\"column eight wide\">\r\n          <SongDetail />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\n\r\nconst songsReducer = () => {\r\n  return [\r\n    { title: \"Zetsubou Billy\", duration: \"3:52\" },\r\n    { title: \"Libera Me from Hell\", duration: \"4:50\" },\r\n    { title: \"Swordland\", duration: \"3:17\" },\r\n    { title: \"Brave Shine\", duration: \"3:53\" },\r\n    { title: \"Gravity Wall\", duration: \"3:47\" },\r\n  ];\r\n};\r\n\r\nconst selectedSongReducer = (selectedSong = null, action) => {\r\n  if (action.type === \"SONG_SELECTED\") {\r\n    return action.payload;\r\n  }\r\n\r\n  return selectedSong;\r\n};\r\n\r\nexport default combineReducers({\r\n  songs: songsReducer,\r\n  selectedSong: selectedSongReducer,\r\n});\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\n\r\nimport App from \"./components/App\";\r\nimport reducers from \"./reducers\";\r\n\r\nReactDom.render(\r\n  <Provider store={createStore(reducers)}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}